/*
 * Copyright 2019 michael.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.uos.inf.did.abbozza.plugineditor.gui;

import de.uos.inf.did.abbozza.plugineditor.PluginEditor;
import java.awt.Frame;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author michael
 */
public class PathDialog extends javax.swing.JDialog {

    private int state = 0;
    
    /**
     * Creates new form PathDialog
     */
    public PathDialog(String aPath, String cPath, String wPath) {
        super((Frame) null, true);
        initComponents();
        setPaths(aPath,cPath,wPath);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        arduinoField = new javax.swing.JTextField();
        calliopeButton = new javax.swing.JButton();
        arduinoBox = new javax.swing.JCheckBox();
        calliopeBox = new javax.swing.JCheckBox();
        worldsBox = new javax.swing.JCheckBox();
        calliopeField = new javax.swing.JTextField();
        worldsField = new javax.swing.JTextField();
        arduinoButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        worldsButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        jLabel1.setText("Choose the installation directories.");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        arduinoField.setToolTipText("<html>\nChoose the directory in which the abbozza tool<br/>\nis installed. Usually this should be found in<br/>\n<em>&lt;user home&gt;/Arduino/tools/Abbozza</em>\n</html>");
        arduinoField.setEnabled(false);

        calliopeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/uos/inf/did/abbozza/plugineditor/directory24.png"))); // NOI18N
        calliopeButton.setEnabled(false);
        calliopeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calliopeButtonActionPerformed(evt);
            }
        });

        arduinoBox.setText("Arduino");
        arduinoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arduinoBoxActionPerformed(evt);
            }
        });

        calliopeBox.setText("Calliope Mini");
        calliopeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calliopeBoxActionPerformed(evt);
            }
        });

        worldsBox.setText("Worlds");
        worldsBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worldsBoxActionPerformed(evt);
            }
        });

        calliopeField.setToolTipText("<html>\nChoose the directory in which abbozza! Calliope<br/>\nis installed. Usually this should be in<br/>\n<em>&lt;user home&gt;/abbozzaCalliope</em>\n</html>");
        calliopeField.setEnabled(false);

        worldsField.setToolTipText("<html>\nChoose the directory in which <em>abbozza-worlds.jar</em> can be found.\n</html>");
        worldsField.setEnabled(false);

        arduinoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/uos/inf/did/abbozza/plugineditor/directory24.png"))); // NOI18N
        arduinoButton.setEnabled(false);
        arduinoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arduinoButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose the paths to the abbozza! jars");

        worldsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/uos/inf/did/abbozza/plugineditor/directory24.png"))); // NOI18N
        worldsButton.setEnabled(false);
        worldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                worldsButtonActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        cancelButton.setText("Cancel");
        cancelButton.setDefaultCapable(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel1.add(okButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calliopeBox)
                                    .addComponent(worldsBox)
                                    .addComponent(arduinoBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(arduinoField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calliopeField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(worldsField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(arduinoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calliopeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(worldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(arduinoField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(arduinoBox))
                            .addComponent(arduinoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calliopeBox)
                            .addComponent(calliopeField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(calliopeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(worldsBox)
                        .addComponent(worldsField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(worldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arduinoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arduinoBoxActionPerformed
        if ( arduinoBox.isSelected() ) {
            arduinoField.setEnabled(true);
            arduinoButton.setEnabled(true);
        } else {
            arduinoField.setEnabled(false);
            arduinoButton.setEnabled(false);            
        }
    }//GEN-LAST:event_arduinoBoxActionPerformed

    private void calliopeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calliopeBoxActionPerformed
        if ( calliopeBox.isSelected() ) {
            calliopeField.setEnabled(true);
            calliopeButton.setEnabled(true);
        } else {
            calliopeField.setEnabled(false);
            calliopeButton.setEnabled(false);            
        }
    }//GEN-LAST:event_calliopeBoxActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        state = 0;
        if ( checkJars() ) {   
            setVisible(false);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void worldsBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worldsBoxActionPerformed
        if ( worldsBox.isSelected() ) {
            worldsField.setEnabled(true);
            worldsButton.setEnabled(true);
        } else {
            worldsField.setEnabled(false);
            worldsButton.setEnabled(false);            
        }
    }//GEN-LAST:event_worldsBoxActionPerformed

    private void arduinoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arduinoButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileFilter filter = new FileFilter() {
            @Override
            public String getDescription() {
                return "abbozza! Arduino directory";
            }

            @Override
            public boolean accept(File f) {
                return f.isDirectory();
            }
        };
        chooser.setCurrentDirectory(new File(arduinoField.getText()));
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("Choose installation directory of abbozza! Arduino");
        chooser.setApproveButtonText("Choose directory");
        int returnVal = chooser.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File pluginDir = chooser.getSelectedFile();
            arduinoField.setText(pluginDir.getAbsolutePath());
        }
    }//GEN-LAST:event_arduinoButtonActionPerformed

    private void calliopeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calliopeButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileFilter filter = new FileFilter() {
            @Override
            public String getDescription() {
                return "abbozza! Calliope directory";
            }

            @Override
            public boolean accept(File f) {
                return f.isDirectory();
            }
        };
        chooser.setCurrentDirectory(new File(calliopeField.getText()));
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("Choose installation directory of abbozza! Calliope");
        chooser.setApproveButtonText("Choose directory");
        int returnVal = chooser.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File pluginDir = chooser.getSelectedFile();
            calliopeField.setText(pluginDir.getAbsolutePath());
        }
    }//GEN-LAST:event_calliopeButtonActionPerformed

    private void worldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_worldsButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileFilter filter = new FileFilter() {
            @Override
            public String getDescription() {
                return "abbozza! Worlds directory";
            }

            @Override
            public boolean accept(File f) {
                return f.isDirectory();
            }
        };
        chooser.setCurrentDirectory(new File(worldsField.getText()));
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("Choose installation directory of abbozza! Calliope");
        chooser.setApproveButtonText("Choose directory");
        int returnVal = chooser.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File pluginDir = chooser.getSelectedFile();
            worldsField.setText(pluginDir.getAbsolutePath());
        }
    }//GEN-LAST:event_worldsButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        state = 1;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox arduinoBox;
    private javax.swing.JButton arduinoButton;
    private javax.swing.JTextField arduinoField;
    private javax.swing.JCheckBox calliopeBox;
    private javax.swing.JButton calliopeButton;
    private javax.swing.JTextField calliopeField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okButton;
    private javax.swing.JCheckBox worldsBox;
    private javax.swing.JButton worldsButton;
    private javax.swing.JTextField worldsField;
    // End of variables declaration//GEN-END:variables

    public void setPaths(String arduino, String calliope, String worlds) {
        if ( arduino != null ) {
            arduinoField.setText(arduino);
            arduinoField.setEnabled(true);
            arduinoButton.setEnabled(true);
            arduinoBox.setSelected(true);
        } else {
            arduinoField.setEnabled(false);
            arduinoButton.setEnabled(false);            
            arduinoBox.setSelected(false);
        }

        if ( calliope != null ) {
            calliopeField.setText(calliope);
            calliopeField.setEnabled(true);
            calliopeButton.setEnabled(true);
            calliopeBox.setSelected(true);
        } else {
            calliopeField.setEnabled(false);
            calliopeButton.setEnabled(false);            
            calliopeBox.setSelected(false);
        }

        if ( worlds != null ) {
            worldsField.setText(worlds);
            worldsField.setEnabled(true);
            worldsButton.setEnabled(true);
            worldsBox.setSelected(true);
        } else {
            worldsField.setEnabled(false);
            worldsButton.setEnabled(false);            
            worldsBox.setSelected(false);
        }
    }
    
    public String getArduinoPath() {
        if ( arduinoBox.isSelected() ) {
            return arduinoField.getText();
        }
        return null;
    }
    
    public String getCalliopePath() {
        if ( calliopeBox.isSelected() ) {
            return calliopeField.getText();
        }
        return null;
    }

    public String getWorldsPath() {
        if ( worldsBox.isSelected() ) {
            return worldsField.getText();
        }
        return null;
    }
    
    public int getState() {
        return state;
    }
    
        
    public boolean checkJars() {
        File jar;
        String arduinoPath = arduinoField.getText();
        if ( !arduinoBox.isSelected() ) arduinoPath = null;
        
        String calliopePath = calliopeField.getText();
        if ( !calliopeBox.isSelected() ) calliopePath = null;

        String worldsPath = worldsField.getText();
        if ( !worldsBox.isSelected() ) worldsPath = null;
        
        if ( arduinoPath != null ) {
            jar = new File(arduinoPath + "/tool/abbozza-arduino.jar");
            if ( !jar.exists() ) {
                PluginEditor.showErrorMessage("No abbozza! Arduino found in " + arduinoPath );
                return false;
            }   
        }
        
        if ( calliopePath != null ) {
            jar = new File(calliopePath + "/lib/abbozza-calliope.jar");
            if ( !jar.exists() ) {
                PluginEditor.showErrorMessage("No abbozza! Calliope found in " + calliopePath );
                return false;
            }   
        }
        
        if ( worldsPath != null ) {
            jar = new File(worldsPath + "/abbozza-worlds.jar");
            if ( !jar.exists() ) {
                PluginEditor.showErrorMessage("No abbozza! Worlds found in " + worldsPath );
                return false;
            }   
        }
        
        return true;
    }
    
    public void dispose() {
        this.state = 1;
        super.dispose();
    }

}
